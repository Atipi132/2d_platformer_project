<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="77cbb13f-1df8-430d-8f42-25bcc204ccf9" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/player.py" beforeDir="false" afterPath="$PROJECT_DIR$/player.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/sprite.py" beforeDir="false" afterPath="$PROJECT_DIR$/sprite.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Attaque/Attaque Faible/RedHood-AttaqueFaible (1).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Attaque/Attaque Faible/RedHood-AttaqueFaible (10).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Attaque/Attaque Faible/RedHood-AttaqueFaible (11).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Attaque/Attaque Faible/RedHood-AttaqueFaible (12).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Attaque/Attaque Faible/RedHood-AttaqueFaible (13).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Attaque/Attaque Faible/RedHood-AttaqueFaible (14).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Attaque/Attaque Faible/RedHood-AttaqueFaible (15).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Attaque/Attaque Faible/RedHood-AttaqueFaible (16).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Attaque/Attaque Faible/RedHood-AttaqueFaible (17).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Attaque/Attaque Faible/RedHood-AttaqueFaible (18).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Attaque/Attaque Faible/RedHood-AttaqueFaible (19).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Attaque/Attaque Faible/RedHood-AttaqueFaible (2).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Attaque/Attaque Faible/RedHood-AttaqueFaible (20).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Attaque/Attaque Faible/RedHood-AttaqueFaible (21).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Attaque/Attaque Faible/RedHood-AttaqueFaible (22).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Attaque/Attaque Faible/RedHood-AttaqueFaible (23).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Attaque/Attaque Faible/RedHood-AttaqueFaible (3).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Attaque/Attaque Faible/RedHood-AttaqueFaible (4).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Attaque/Attaque Faible/RedHood-AttaqueFaible (5).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Attaque/Attaque Faible/RedHood-AttaqueFaible (6).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Attaque/Attaque Faible/RedHood-AttaqueFaible (7).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Attaque/Attaque Faible/RedHood-AttaqueFaible (8).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Attaque/Attaque Faible/RedHood-AttaqueFaible (9).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (1).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (10).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (11).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (12).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (13).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (14).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (15).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (16).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (17).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (18).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (19).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (2).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (20).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (21).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (22).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (23).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (24).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (25).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (26).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (27).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (28).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (29).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (3).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (30).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (31).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (32).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (33).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (34).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (35).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (36).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (37).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (38).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (39).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (4).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (40).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (41).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (42).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (43).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (44).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (45).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (46).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (47).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (48).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (5).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (6).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (7).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (8).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Course (9).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Course/RedHood-Idle.png" beforeDir="false" afterPath="$PROJECT_DIR$/sprites/RedHoodSprite/Idle/01.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (1).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (10).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (11).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (12).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (13).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (14).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (15).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (16).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (17).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (18).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (19).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (2).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (20).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (21).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (22).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (23).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (24).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (25).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (26).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (27).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (28).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (29).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (3).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (30).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (31).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (32).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (33).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (34).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (35).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (36).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (37).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (38).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (39).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (4).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (40).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (41).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (42).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (43).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (44).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (45).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (46).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (47).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (48).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (49).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (5).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (50).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (51).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (52).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (53).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (54).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (55).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (56).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (6).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (7).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (8).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sprites/RedHoodSprite/Saut/Redhood-Saut (9).png" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Merge.Settings">
    <option name="BRANCH" value="origin/main" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;TDEVYS&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">
    <option name="selectedUrlAndAccountId">
      <UrlAndAccount>
        <option name="accountId" value="15553245-d57d-40c5-b0de-4ef4bf9316a7" />
        <option name="url" value="https://github.com/Atipi132/2d_platformer_project.git" />
      </UrlAndAccount>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2eXzzeYKhjWWrAaQyZ0yh2WS99i" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Python.main.executor&quot;: &quot;Run&quot;,
    &quot;Python.map.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/lubel/PycharmProjects/2d_platformer_project/DossierBazar&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\lubel\PycharmProjects\2d_platformer_project\DossierBazar" />
      <recent name="C:\Users\lubel\PycharmProjects\2d_platformer_project\sprites\Squelette\Mort" />
      <recent name="C:\Users\lubel\PycharmProjects\2d_platformer_project\sprites\Squelette" />
      <recent name="C:\Users\lubel\PycharmProjects\2d_platformer_project\sprites" />
      <recent name="C:\Users\lubel\PycharmProjects\2d_platformer_project\sprites\RedHoodSprite\Attaque\Attaque Faible" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\lubel\PycharmProjects\2d_platformer_project" />
      <recent name="C:\Users\lubel\PycharmProjects\2d_platformer_project\sprites\RedHoodSprite\Attaque" />
      <recent name="C:\Users\lubel\PycharmProjects\2d_platformer_project\sprites\RedHoodSprite\Course" />
      <recent name="C:\Users\lubel\PycharmProjects\2d_platformer_project\sprites\RedHoodSprite\Idle" />
      <recent name="C:\Users\lubel\PycharmProjects\2d_platformer_project\sprites\RedHoodSprite\Saut" />
    </key>
  </component>
  <component name="RunManager">
    <configuration name="map" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="2d_platformer_project" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/map.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python.map" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-python-sdk-d68999036c7f-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.14475.56" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="77cbb13f-1df8-430d-8f42-25bcc204ccf9" name="Changes" comment="" />
      <created>1712065974704</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1712065974704</updated>
    </task>
    <task id="LOCAL-00001" summary="Modification pour les déplacements du personnage concernant les directions et les animations, de gauche à droite et animation de marche. &#10;Modification de def __init__ :&#10;Prise en compte l'animation de marche. &#10;Ajout de l'animation de marche et d'une phase d'idle lors que l'on reste fixe.&#10;&#10;Modification de def update(self) : &#10;On ne peut plus que se déplacer de gauche à droite ce qui correspond à l'idée du sidescroller 2D que l'on souhaite faire.&#10;&#10;Ajout de def Walk_animation(self): &#10;S'occupe de la gestion de l'animation de marche &#10;&#10;Ajout des fichiers images dans le dossier Sprites">
      <option name="closed" value="true" />
      <created>1712069797588</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1712069797588</updated>
    </task>
    <task id="LOCAL-00002" summary="Ajout d'un fichier dans sprites qu'il manquait">
      <option name="closed" value="true" />
      <created>1712070716607</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1712070716607</updated>
    </task>
    <task id="LOCAL-00003" summary="Ajout du sprite de saut">
      <option name="closed" value="true" />
      <created>1712237903090</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1712237903090</updated>
    </task>
    <task id="LOCAL-00004" summary="Ajout de l'animation de saut&#10;Modification dans def update(self), &#10;ajout de : self.jump_animation() dans le if self.verticalspeed &lt; 10 and not onground:&#10;&#10;Ajout de def jump_animation(self)&#10;&#10;Modification de class Player(Sprite): &#10;ajout de self.jump_image = pygame.image.load(&quot;sprites/jump.png&quot;)">
      <option name="closed" value="true" />
      <created>1712239939459</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1712239939459</updated>
    </task>
    <task id="LOCAL-00005" summary="Ajout de sprites pour des plateformes provisoires">
      <option name="closed" value="true" />
      <created>1712240585671</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1712240585671</updated>
    </task>
    <task id="LOCAL-00006" summary="Ajout de la fonctionnalité d'attaque et de ses animations ainsi que des sprites&#10;Modification de la class Player(Sprite) : &#10;Ajout dans def __init__ de &#10;self.attack_image = pygame.image.load(&quot;sprites/Punch.png&quot;)&#10;&#10;Ajout dans def update(self) de : (touche d'attaque)  &#10;if key[pygame.K_a]:&#10;            self.attack()&#10;            self.attack_animation()&#10;            &#10;Ajout de def attack_animation(self) : (animation d'attaque) &#10;    def attack_animation(self):&#10;        self.image = self.attack_image&#10;        if self.facing_left:&#10;            self.image = pygame.transform.flip(self.image, True, False)&#10;&#10;Ajout de l'attaque : &#10;    def attack(self):&#10;        # Create an attack box in front of the player&#10;        attack_damage = 10&#10;        attack_duration = 10&#10;        if self.facing_left:&#10;            attack_position = (self.rect.left - 32, self.rect.centery)&#10;        else:&#10;            attack_position = (self.rect.right + 32, self.rect.centery)&#10;&#10;        attack_box = AttackBox(*attack_position, attack_damage, attack_duration)&#10;        &#10;Création de la boite de degats du joueur avec une nouvelle classe : &#10;class AttackBox(Sprite):&#10;    def __init__(self, startx: int, starty: int, damage: int, duration: int):&#10;        super().__init__(&quot;sprites/attack_box.png&quot;, startx, starty)&#10;        self.damage = damage&#10;        self.duration = 1&#10;        self.lifetime = 2  # Lifetime counter&#10;&#10;    def update(self):&#10;        # Decrease lifetime&#10;        self.lifetime -= 1&#10;        if self.lifetime &lt;= 0:&#10;            self.kill()  # Destroy the attack box when its lifetime ends">
      <option name="closed" value="true" />
      <created>1712242309251</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1712242309251</updated>
    </task>
    <task id="LOCAL-00007" summary="Modification de la fonctionnalité d'attaque pour bloquer les déplacements horizontaux quand elle est active &#10;&#10;        if key[pygame.K_a]:&#10;            self.attack()&#10;            self.attack_animation()&#10;            horizontalspeed = 0&#10;&#10;        if self.previous_key[pygame.K_UP] and not key[pygame.K_UP]:&#10;            horizontalspeed = self.speed">
      <option name="closed" value="true" />
      <created>1712242878036</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1712242878036</updated>
    </task>
    <task id="LOCAL-00008" summary="Modification de la fonctionnalité d'attaque pour bloquer les déplacements horizontaux quand elle est active &#10;&#10;        if key[pygame.K_a]:&#10;            self.attack()&#10;            self.attack_animation()&#10;            horizontalspeed = 0&#10;&#10;        if self.previous_key[pygame.K_UP] and not key[pygame.K_UP]:&#10;            horizontalspeed = self.speed">
      <option name="closed" value="true" />
      <created>1712243255088</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1712243255088</updated>
    </task>
    <task id="LOCAL-00009" summary="Ajout d'une note, modification du nom d'une variable">
      <option name="closed" value="true" />
      <created>1712243366343</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1712243366343</updated>
    </task>
    <task id="LOCAL-00010" summary="Modification pour changer le sprite de base du personnage jouable : &#10;class Player(sprite) où les noms de fichier ont été changés&#10;Ajout des sprites pour l'animation de course">
      <option name="closed" value="true" />
      <created>1712848255103</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1712848255104</updated>
    </task>
    <task id="LOCAL-00011" summary="Modification pour changer le sprite de base du personnage jouable : &#10;class Player(sprite) où les noms de fichier ont été changés&#10;Ajout des sprites pour l'animation de course">
      <option name="closed" value="true" />
      <created>1712849050127</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1712849050127</updated>
    </task>
    <task id="LOCAL-00012" summary="8 -&gt; 25">
      <option name="closed" value="true" />
      <created>1712849231631</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1712849231631</updated>
    </task>
    <task id="LOCAL-00013" summary="Changement pour ajouter l'animation de saut : &#10;&#10;Dans : class Player(Sprite):&#10;&#10;   Dans :  def __init__(self, startx, starty, collision_group):&#10;    Ajout de nouvelle ligne de code, modification des lignes suivantes et réorganisation de cette partie avec des commmentaires&#10;    &#10;    #Relatif au saut&#10;        self.jump_images = [pygame.image.load(&quot;sprites/RedHoodSprite/SautC/RedHood-Saut ({}).png&quot;.format(i)) for i in&#10;                            range(1, 56)]&#10;        self.jump_index = 0&#10;        self.jumping = False&#10;        self.jump_finished = True&#10;        &#10;     Dans : def update(self):&#10;     &#10;                   if key[pygame.K_UP] and onground:&#10;            self.verticalspeed = -self.jumpspeed&#10;            self.jumping = True&#10;            self.jump_finished = False&#10;       &#10;       et  if self.jumping:&#10;            self.jump_animation()&#10;&#10;     Dans :          def jump_animation(self):&#10;        if not self.jump_finished:&#10;            self.image = self.jump_images[self.jump_index]&#10;            if self.facing_left:&#10;                self.image = pygame.transform.flip(self.image, True, False)&#10;            self.jump_index += 1&#10;&#10;&#10;            if self.jump_index &gt;= len(self.jump_images):&#10;                self.jump_index = len(self.jump_images) - 1&#10;                self.jump_finished = True&#10;        else :&#10;            self.jump_index = 0">
      <option name="closed" value="true" />
      <created>1714374404854</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1714374404854</updated>
    </task>
    <task id="LOCAL-00014" summary="Modification dans les fichiers, changement de noms et trie">
      <option name="closed" value="true" />
      <created>1714375069872</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1714375069872</updated>
    </task>
    <task id="LOCAL-00015" summary="Modification pour l'ajout de l'animation d'attaque et ajout des sprites qui vont avec :&#10;Dans : def __init__(self, startx, starty, collision_group): &#10;      #Relatif à l'attaque&#10;        self.attack_images = [pygame.image.load(&quot;sprites/RedHoodSprite/Attaque/Attaque Faible/RedHood-AttaqueFaible ({}).png&quot;.format(i)) for i in range(1, 24)]&#10;        self.attack_index = 0&#10;        self.currently_attacking = False&#10;        self.attack_finished = True&#10;        self.attack_cooldown = 0&#10;        &#10;Dans : def update(self): &#10;              if (key[pygame.K_a] and self.attack_cooldown == 0 and not self.previous_key[pygame.K_a]) or (self.previous_key[pygame.K_a] and self.attack_cooldown != 0):&#10;                         self.attack_finished = False&#10;&#10; Dans : def attack_animation(self): (totalement refait) &#10;        if not self.attack_finished:&#10;            self.image = self.attack_images[self.attack_index]&#10;            if self.facing_left:&#10;                self.image = pygame.transform.flip(self.image, True, False)&#10;            self.attack_index += 1&#10;&#10;            if self.attack_index &gt;= len(self.attack_images):&#10;                self.attack_index = len(self.attack_images) - 1&#10;                self.attack_finished = True&#10;        if self.attack_finished == True :&#10;            self.attack_index = 0">
      <option name="closed" value="true" />
      <created>1714377375543</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1714377375543</updated>
    </task>
    <task id="LOCAL-00016" summary="Ajout des sprites pour l'ennemi squelette et suppression fichier inutile">
      <option name="closed" value="true" />
      <created>1714485062409</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1714485062409</updated>
    </task>
    <task id="LOCAL-00017" summary="Animation pour le squelette : &#10;Modification sur les noms des sprites pour harmoniser ainsi que sur le fichier nonplayablecharacter.py qui nous servira pour faire le premier ennemi&#10;&#10;Dans nonplayablecharacter.py : &#10;     Dans : class nonplayablecharacter(Player) :&#10;          Dans : def __init__(self, startx: int, starty: int, collision_group, player: Player):    # Relatif à l'attaque&#10;        self.attack_images = [&#10;            pygame.image.load(&quot;sprites/Squelette/Attaque/Squelette-Attaque ({}).png&quot;.format(i))&#10;            for i in range(1, 18)]&#10;        self.attack_index = 0&#10;        self.currently_attacking = False&#10;        self.attack_finished = True&#10;        self.attack_cooldown = 0&#10;&#10;        # Relatif à la course&#10;        self.walk_cycle = [pygame.image.load(&quot;sprites/Squelette/Marche/Squelette-Marche ({}).png&quot;.format(i)) for i in&#10;                           range(1, 13)]&#10;        self.animation_index = 0&#10;        self.facing_left = False&#10;        self.speed = 1&#10;&#10;        #Relatif à la mort&#10;        self.death_images = [pygame.image.load(&quot;sprites/Squelette/Mort/Squelette-Mort ({}).png&quot;.format(i)) for i in&#10;                           range(1, 40)]&#10;        self.death_index = 0&#10;        self.death = False&#10;        &#10;    Dans def update(self):  (Ajout de la condition qui demande à ce que le squelette soit en vie pour que son comportement classqiue ait lieu) &#10;     if not self.death :&#10;            if self.side == 'L':&#10;                if not self.check_collisions(-1, 0, self.collision_group):&#10;                    self.facing_left = True&#10;                    self.walk_animation()&#10;                    horizontal_speed = -self.speed&#10;                else:&#10;                    self.facing_left = False&#10;                    self.walk_animation()&#10;                    horizontal_speed = self.speed&#10;                    self.side = 'R'&#10;        &#10;            else:&#10;                if not self.check_collisions(1, 0, self.collision_group):&#10;                    self.facing_left = False&#10;                    self.walk_animation()&#10;                    horizontal_speed = self.speed&#10;                else:&#10;                    self.facing_left = False&#10;                    self.walk_animation()&#10;                    horizontal_speed = self.speed&#10;                    self.side = 'L'&#10;        else :&#10;            self.death_animation()&#10;            &#10;        et : &#10;                if self.check_collisions(0, 0, self.player_group):&#10;            if self.player_group.sprites()[0].currently_attacking == True and self.facing_left != self.player_group.sprites()[0].facing_left:&#10;                print(&quot;Collision with player detected : NPC died&quot;)&#10;                self.death = True&#10;&#10;            elif not self.death :&#10;                self.player_group.sprites()[0].dead = True&#10;                print(&quot;Collision with player detected : Player died&quot;)&#10;                &#10;     Ajout de &#10;              def walk_animation(self):&#10;        self.image = self.walk_cycle[self.animation_index]&#10;        if self.facing_left:&#10;            self.image = pygame.transform.flip(self.image, True, False)&#10;&#10;        if self.animation_index &lt; len(self.walk_cycle) - 1:&#10;            self.animation_index += 1&#10;        else:&#10;            self.animation_index = 0&#10;    def attack_animation(self):&#10;        if not self.attack_finished:&#10;            self.image = self.attack_images[self.attack_index]&#10;            if self.facing_left:&#10;                self.image = pygame.transform.flip(self.image, True, False)&#10;            self.attack_index += 1&#10;&#10;            if self.attack_index &gt;= len(self.attack_images):&#10;                self.attack_index = len(self.attack_images) - 1&#10;                self.attack_finished = True&#10;        if self.attack_finished == True :&#10;            self.attack_index = 0&#10;&#10;    def death_animation(self):&#10;        self.image = self.death_images[self.death_index]&#10;        if self.death_index &lt; len(self.death_images)-1 :&#10;            self.death_index += 1&#10;        if self.death_index == len(self.death_images)-1 :&#10;            self.kill()">
      <option name="closed" value="true" />
      <created>1714488200475</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1714488200475</updated>
    </task>
    <task id="LOCAL-00018" summary="Ajout de commentaire dans nonplayablecharacter.py et player.py et Réorganisation de code dans player.py&#10; def update(self): (Réorganiser pour être plus clair)&#10;&#10;        horizontal_speed = 0&#10;        onground = self.check_collisions(0, 1, self.collision_group) # Permet de définir lorsque le personnage est au sol&#10;&#10;        key = pygame.key.get_pressed()&#10;        # Relatif au déplacement :&#10;        if key[pygame.K_LEFT]:&#10;            self.facing_left = True&#10;            self.walk_animation()&#10;            horizontal_speed = -self.speed&#10;        elif key[pygame.K_RIGHT]:&#10;            self.facing_left = False&#10;            self.walk_animation()&#10;            horizontal_speed = self.speed&#10;        else:&#10;            self.image = self.stand_image    &#10;&#10;        # Relatif au saut :&#10;        if key[pygame.K_UP] and onground:&#10;            self.verticalspeed = -self.jumpspeed&#10;            self.jumping = True&#10;            self.jump_finished = False&#10;&#10;        if self.jumping:&#10;            self.jump_animation()&#10;&#10;        #Gestion de la hauteur des sauts :&#10;        if self.previous_key[pygame.K_UP] and not key[pygame.K_UP]:&#10;            if self.verticalspeed &lt; -self.min_jumpspeed:&#10;                self.verticalspeed = -self.min_jumpspeed&#10;&#10;        if self.verticalspeed &lt; 10 and not onground:&#10;            self.jump_animation()&#10;            self.verticalspeed += self.gravity&#10;&#10;&#10;        if self.verticalspeed &gt; 0 and onground:&#10;            self.verticalspeed = 0&#10;&#10;        # Relatif à l'attaque :&#10;&#10;        if (key[pygame.K_a] and self.attack_cooldown == 0 and not self.previous_key[pygame.K_a]) or (self.previous_key[pygame.K_a] and self.attack_cooldown != 0):&#10;            self.currently_attacking = True&#10;            if not self.previous_key[pygame.K_a]:&#10;                self.attack_cooldown = 15&#10;            self.attack()&#10;            self.attack_animation()&#10;            horizontal_speed = 0&#10;            self.attack_finished = False&#10;        else:&#10;            self.currently_attacking = False&#10;        &#10;        if self.attack_cooldown &gt; 0:&#10;            self.attack_cooldown -= 1&#10;&#10;        if self.previous_key[pygame.K_UP] and not key[pygame.K_UP]: # Bloque le deplacement pendant l'attaque&#10;            horizontal_speed = self.speed&#10;&#10;&#10;&#10;        self.move(horizontal_speed, self.verticalspeed)&#10;        self.previous_key = key">
      <option name="closed" value="true" />
      <created>1714489955883</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1714489955883</updated>
    </task>
    <task id="LOCAL-00019" summary="Je n'arrive pas à pull donc je dois commit des changements inexistants pour le faire">
      <option name="closed" value="true" />
      <created>1714577865863</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1714577865863</updated>
    </task>
    <task id="LOCAL-00020" summary="Résolution de problèmes lors des animations du joueur et de l'ennemi&#10;&#10;Animation de mort qui ne s'executait pas pour le squelette :             if self.dead == True :&#10;            self.death_animation()&#10;&#10;        if not self.dead:&#10;&#10;            if max(player_center, ennemy_center) - min(player_center, ennemy_center)&lt; 200:&#10;                if player_center &gt; ennemy_center:&#10;                    self.facing_left = False&#10;                    self.walk_animation()&#10;                    horizontal_speed = self.speed&#10;                    self.side = 'R'&#10;&#10;                else:&#10;                    self.facing_left = True&#10;                    self.walk_animation()&#10;                    horizontal_speed = -self.speed&#10;                    self.side = 'L'&#10;&#10;&#10;            elif self.side == 'L':&#10;                if not self.check_collisions(-1, 0, self.collision_group):&#10;                    self.facing_left = True&#10;                    self.walk_animation()&#10;                    horizontal_speed = -self.speed&#10;                else:&#10;                    self.facing_left = False&#10;                    self.walk_animation()&#10;                    horizontal_speed = self.speed&#10;                    self.side = 'R'&#10;&#10;            else:&#10;                if not self.check_collisions(1, 0, self.collision_group):&#10;                    self.facing_left = False&#10;                    self.walk_animation()&#10;                    horizontal_speed = self.speed&#10;                else:&#10;                    self.facing_left = False&#10;                    self.walk_animation()&#10;                    horizontal_speed = self.speed&#10;                    self.side = 'L'&#10;&#10;            if not onground:&#10;                self.verticalspeed += self.gravity&#10;&#10;            self.move(horizontal_speed, self.verticalspeed)&#10;            if self.check_collisions(0, 0, self.player_group):&#10;                self.player_interaction()&#10;&#10;&#10;&#10;Animation de chute ajoutée sur le joueur : &#10;def __init__(self, startx, starty, collision_group): &#10;          self.falling_image = [pygame.image.load(&quot;sprites/RedHoodSprite/Saut/RedHood-Saut ({}).png&quot;.format(i)) for i in&#10;                            range(40, 56)]&#10;        self.falling_index = 0&#10;&#10;def update(self): &#10;       # Relatif à la chute &#10;        if not onground and not key[pygame.K_UP] :&#10;            self.falling_animation()&#10;            &#10; &#10;def falling_animation(self):&#10;     self.image = self.falling_image[self.falling_index]&#10;        if self.facing_left:&#10;            self.image = pygame.transform.flip(self.image, True, False)&#10;        self.falling_index += 1&#10;        if self.falling_index == len(self.falling_image):&#10;            self.falling_index = 0&#10;&#10;&#10;&#10;Animation de course du joueur ne s'execute plus en l'air : &#10;        def update(self):                              if onground :&#10;                self.walk_animation()&#10;&#10;Animation de Saut qui ne s'exècute plus au sol : &#10;     def update(self):&#10;        if self.jumping:&#10;            if not onground :&#10;                self.jump_animation()">
      <option name="closed" value="true" />
      <created>1714582340634</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1714582340634</updated>
    </task>
    <option name="localTasksCounter" value="21" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Modification pour les déplacements du personnage concernant les directions et les animations, de gauche à droite et animation de marche. &#10;Modification de def __init__ :&#10;Prise en compte l'animation de marche. &#10;Ajout de l'animation de marche et d'une phase d'idle lors que l'on reste fixe.&#10;&#10;Modification de def update(self) : &#10;On ne peut plus que se déplacer de gauche à droite ce qui correspond à l'idée du sidescroller 2D que l'on souhaite faire.&#10;&#10;Ajout de def Walk_animation(self): &#10;S'occupe de la gestion de l'animation de marche &#10;&#10;Ajout des fichiers images dans le dossier Sprites" />
    <MESSAGE value="Ajout d'un fichier dans sprites qu'il manquait" />
    <MESSAGE value="Ajout du sprite de saut" />
    <MESSAGE value="Ajout de l'animation de saut&#10;Modification dans def update(self), &#10;ajout de : self.jump_animation() dans le if self.verticalspeed &lt; 10 and not onground:&#10;&#10;Ajout de def jump_animation(self)&#10;&#10;Modification de class Player(Sprite): &#10;ajout de self.jump_image = pygame.image.load(&quot;sprites/jump.png&quot;)" />
    <MESSAGE value="Ajout de sprites pour des plateformes provisoires" />
    <MESSAGE value="Ajout de la fonctionnalité d'attaque et de ses animations ainsi que des sprites&#10;Modification de la class Player(Sprite) : &#10;Ajout dans def __init__ de &#10;self.attack_image = pygame.image.load(&quot;sprites/Punch.png&quot;)&#10;&#10;Ajout dans def update(self) de : (touche d'attaque)  &#10;if key[pygame.K_a]:&#10;            self.attack()&#10;            self.attack_animation()&#10;            &#10;Ajout de def attack_animation(self) : (animation d'attaque) &#10;    def attack_animation(self):&#10;        self.image = self.attack_image&#10;        if self.facing_left:&#10;            self.image = pygame.transform.flip(self.image, True, False)&#10;&#10;Ajout de l'attaque : &#10;    def attack(self):&#10;        # Create an attack box in front of the player&#10;        attack_damage = 10&#10;        attack_duration = 10&#10;        if self.facing_left:&#10;            attack_position = (self.rect.left - 32, self.rect.centery)&#10;        else:&#10;            attack_position = (self.rect.right + 32, self.rect.centery)&#10;&#10;        attack_box = AttackBox(*attack_position, attack_damage, attack_duration)&#10;        &#10;Création de la boite de degats du joueur avec une nouvelle classe : &#10;class AttackBox(Sprite):&#10;    def __init__(self, startx: int, starty: int, damage: int, duration: int):&#10;        super().__init__(&quot;sprites/attack_box.png&quot;, startx, starty)&#10;        self.damage = damage&#10;        self.duration = 1&#10;        self.lifetime = 2  # Lifetime counter&#10;&#10;    def update(self):&#10;        # Decrease lifetime&#10;        self.lifetime -= 1&#10;        if self.lifetime &lt;= 0:&#10;            self.kill()  # Destroy the attack box when its lifetime ends" />
    <MESSAGE value="Modification de la fonctionnalité d'attaque pour bloquer les déplacements horizontaux quand elle est active &#10;&#10;        if key[pygame.K_a]:&#10;            self.attack()&#10;            self.attack_animation()&#10;            horizontalspeed = 0&#10;&#10;        if self.previous_key[pygame.K_UP] and not key[pygame.K_UP]:&#10;            horizontalspeed = self.speed" />
    <MESSAGE value="Ajout d'une note, modification du nom d'une variable" />
    <MESSAGE value="Modification pour changer le sprite de base du personnage jouable : &#10;class Player(sprite) où les noms de fichier ont été changés&#10;Ajout des sprites pour l'animation de course" />
    <MESSAGE value="8 -&gt; 25" />
    <MESSAGE value="Changement pour ajouter l'animation de saut : &#10;&#10;Dans : class Player(Sprite):&#10;&#10;   Dans :  def __init__(self, startx, starty, collision_group):&#10;    Ajout de nouvelle ligne de code, modification des lignes suivantes et réorganisation de cette partie avec des commmentaires&#10;    &#10;    #Relatif au saut&#10;        self.jump_images = [pygame.image.load(&quot;sprites/RedHoodSprite/SautC/RedHood-Saut ({}).png&quot;.format(i)) for i in&#10;                            range(1, 56)]&#10;        self.jump_index = 0&#10;        self.jumping = False&#10;        self.jump_finished = True&#10;        &#10;     Dans : def update(self):&#10;     &#10;                   if key[pygame.K_UP] and onground:&#10;            self.verticalspeed = -self.jumpspeed&#10;            self.jumping = True&#10;            self.jump_finished = False&#10;       &#10;       et  if self.jumping:&#10;            self.jump_animation()&#10;&#10;     Dans :          def jump_animation(self):&#10;        if not self.jump_finished:&#10;            self.image = self.jump_images[self.jump_index]&#10;            if self.facing_left:&#10;                self.image = pygame.transform.flip(self.image, True, False)&#10;            self.jump_index += 1&#10;&#10;&#10;            if self.jump_index &gt;= len(self.jump_images):&#10;                self.jump_index = len(self.jump_images) - 1&#10;                self.jump_finished = True&#10;        else :&#10;            self.jump_index = 0" />
    <MESSAGE value="Modification dans les fichiers, changement de noms et trie" />
    <MESSAGE value="Modification pour l'ajout de l'animation d'attaque et ajout des sprites qui vont avec :&#10;Dans : def __init__(self, startx, starty, collision_group): &#10;      #Relatif à l'attaque&#10;        self.attack_images = [pygame.image.load(&quot;sprites/RedHoodSprite/Attaque/Attaque Faible/RedHood-AttaqueFaible ({}).png&quot;.format(i)) for i in range(1, 24)]&#10;        self.attack_index = 0&#10;        self.currently_attacking = False&#10;        self.attack_finished = True&#10;        self.attack_cooldown = 0&#10;        &#10;Dans : def update(self): &#10;              if (key[pygame.K_a] and self.attack_cooldown == 0 and not self.previous_key[pygame.K_a]) or (self.previous_key[pygame.K_a] and self.attack_cooldown != 0):&#10;                         self.attack_finished = False&#10;&#10; Dans : def attack_animation(self): (totalement refait) &#10;        if not self.attack_finished:&#10;            self.image = self.attack_images[self.attack_index]&#10;            if self.facing_left:&#10;                self.image = pygame.transform.flip(self.image, True, False)&#10;            self.attack_index += 1&#10;&#10;            if self.attack_index &gt;= len(self.attack_images):&#10;                self.attack_index = len(self.attack_images) - 1&#10;                self.attack_finished = True&#10;        if self.attack_finished == True :&#10;            self.attack_index = 0" />
    <MESSAGE value="Ajout des sprites pour l'ennemi squelette et suppression fichier inutile" />
    <MESSAGE value="Animation pour le squelette : &#10;Modification sur les noms des sprites pour harmoniser ainsi que sur le fichier nonplayablecharacter.py qui nous servira pour faire le premier ennemi&#10;&#10;Dans nonplayablecharacter.py : &#10;     Dans : class nonplayablecharacter(Player) :&#10;          Dans : def __init__(self, startx: int, starty: int, collision_group, player: Player):    # Relatif à l'attaque&#10;        self.attack_images = [&#10;            pygame.image.load(&quot;sprites/Squelette/Attaque/Squelette-Attaque ({}).png&quot;.format(i))&#10;            for i in range(1, 18)]&#10;        self.attack_index = 0&#10;        self.currently_attacking = False&#10;        self.attack_finished = True&#10;        self.attack_cooldown = 0&#10;&#10;        # Relatif à la course&#10;        self.walk_cycle = [pygame.image.load(&quot;sprites/Squelette/Marche/Squelette-Marche ({}).png&quot;.format(i)) for i in&#10;                           range(1, 13)]&#10;        self.animation_index = 0&#10;        self.facing_left = False&#10;        self.speed = 1&#10;&#10;        #Relatif à la mort&#10;        self.death_images = [pygame.image.load(&quot;sprites/Squelette/Mort/Squelette-Mort ({}).png&quot;.format(i)) for i in&#10;                           range(1, 40)]&#10;        self.death_index = 0&#10;        self.death = False&#10;        &#10;    Dans def update(self):  (Ajout de la condition qui demande à ce que le squelette soit en vie pour que son comportement classqiue ait lieu) &#10;     if not self.death :&#10;            if self.side == 'L':&#10;                if not self.check_collisions(-1, 0, self.collision_group):&#10;                    self.facing_left = True&#10;                    self.walk_animation()&#10;                    horizontal_speed = -self.speed&#10;                else:&#10;                    self.facing_left = False&#10;                    self.walk_animation()&#10;                    horizontal_speed = self.speed&#10;                    self.side = 'R'&#10;        &#10;            else:&#10;                if not self.check_collisions(1, 0, self.collision_group):&#10;                    self.facing_left = False&#10;                    self.walk_animation()&#10;                    horizontal_speed = self.speed&#10;                else:&#10;                    self.facing_left = False&#10;                    self.walk_animation()&#10;                    horizontal_speed = self.speed&#10;                    self.side = 'L'&#10;        else :&#10;            self.death_animation()&#10;            &#10;        et : &#10;                if self.check_collisions(0, 0, self.player_group):&#10;            if self.player_group.sprites()[0].currently_attacking == True and self.facing_left != self.player_group.sprites()[0].facing_left:&#10;                print(&quot;Collision with player detected : NPC died&quot;)&#10;                self.death = True&#10;&#10;            elif not self.death :&#10;                self.player_group.sprites()[0].dead = True&#10;                print(&quot;Collision with player detected : Player died&quot;)&#10;                &#10;     Ajout de &#10;              def walk_animation(self):&#10;        self.image = self.walk_cycle[self.animation_index]&#10;        if self.facing_left:&#10;            self.image = pygame.transform.flip(self.image, True, False)&#10;&#10;        if self.animation_index &lt; len(self.walk_cycle) - 1:&#10;            self.animation_index += 1&#10;        else:&#10;            self.animation_index = 0&#10;    def attack_animation(self):&#10;        if not self.attack_finished:&#10;            self.image = self.attack_images[self.attack_index]&#10;            if self.facing_left:&#10;                self.image = pygame.transform.flip(self.image, True, False)&#10;            self.attack_index += 1&#10;&#10;            if self.attack_index &gt;= len(self.attack_images):&#10;                self.attack_index = len(self.attack_images) - 1&#10;                self.attack_finished = True&#10;        if self.attack_finished == True :&#10;            self.attack_index = 0&#10;&#10;    def death_animation(self):&#10;        self.image = self.death_images[self.death_index]&#10;        if self.death_index &lt; len(self.death_images)-1 :&#10;            self.death_index += 1&#10;        if self.death_index == len(self.death_images)-1 :&#10;            self.kill()" />
    <MESSAGE value="Ajout de commentaire dans nonplayablecharacter.py et player.py et Réorganisation de code dans player.py&#10; def update(self): (Réorganiser pour être plus clair)&#10;&#10;        horizontal_speed = 0&#10;        onground = self.check_collisions(0, 1, self.collision_group) # Permet de définir lorsque le personnage est au sol&#10;&#10;        key = pygame.key.get_pressed()&#10;        # Relatif au déplacement :&#10;        if key[pygame.K_LEFT]:&#10;            self.facing_left = True&#10;            self.walk_animation()&#10;            horizontal_speed = -self.speed&#10;        elif key[pygame.K_RIGHT]:&#10;            self.facing_left = False&#10;            self.walk_animation()&#10;            horizontal_speed = self.speed&#10;        else:&#10;            self.image = self.stand_image    &#10;&#10;        # Relatif au saut :&#10;        if key[pygame.K_UP] and onground:&#10;            self.verticalspeed = -self.jumpspeed&#10;            self.jumping = True&#10;            self.jump_finished = False&#10;&#10;        if self.jumping:&#10;            self.jump_animation()&#10;&#10;        #Gestion de la hauteur des sauts :&#10;        if self.previous_key[pygame.K_UP] and not key[pygame.K_UP]:&#10;            if self.verticalspeed &lt; -self.min_jumpspeed:&#10;                self.verticalspeed = -self.min_jumpspeed&#10;&#10;        if self.verticalspeed &lt; 10 and not onground:&#10;            self.jump_animation()&#10;            self.verticalspeed += self.gravity&#10;&#10;&#10;        if self.verticalspeed &gt; 0 and onground:&#10;            self.verticalspeed = 0&#10;&#10;        # Relatif à l'attaque :&#10;&#10;        if (key[pygame.K_a] and self.attack_cooldown == 0 and not self.previous_key[pygame.K_a]) or (self.previous_key[pygame.K_a] and self.attack_cooldown != 0):&#10;            self.currently_attacking = True&#10;            if not self.previous_key[pygame.K_a]:&#10;                self.attack_cooldown = 15&#10;            self.attack()&#10;            self.attack_animation()&#10;            horizontal_speed = 0&#10;            self.attack_finished = False&#10;        else:&#10;            self.currently_attacking = False&#10;        &#10;        if self.attack_cooldown &gt; 0:&#10;            self.attack_cooldown -= 1&#10;&#10;        if self.previous_key[pygame.K_UP] and not key[pygame.K_UP]: # Bloque le deplacement pendant l'attaque&#10;            horizontal_speed = self.speed&#10;&#10;&#10;&#10;        self.move(horizontal_speed, self.verticalspeed)&#10;        self.previous_key = key" />
    <MESSAGE value="Je n'arrive pas à pull donc je dois commit des changements inexistants pour le faire" />
    <MESSAGE value="Résolution de problèmes lors des animations du joueur et de l'ennemi&#10;&#10;Animation de mort qui ne s'executait pas pour le squelette :             if self.dead == True :&#10;            self.death_animation()&#10;&#10;        if not self.dead:&#10;&#10;            if max(player_center, ennemy_center) - min(player_center, ennemy_center)&lt; 200:&#10;                if player_center &gt; ennemy_center:&#10;                    self.facing_left = False&#10;                    self.walk_animation()&#10;                    horizontal_speed = self.speed&#10;                    self.side = 'R'&#10;&#10;                else:&#10;                    self.facing_left = True&#10;                    self.walk_animation()&#10;                    horizontal_speed = -self.speed&#10;                    self.side = 'L'&#10;&#10;&#10;            elif self.side == 'L':&#10;                if not self.check_collisions(-1, 0, self.collision_group):&#10;                    self.facing_left = True&#10;                    self.walk_animation()&#10;                    horizontal_speed = -self.speed&#10;                else:&#10;                    self.facing_left = False&#10;                    self.walk_animation()&#10;                    horizontal_speed = self.speed&#10;                    self.side = 'R'&#10;&#10;            else:&#10;                if not self.check_collisions(1, 0, self.collision_group):&#10;                    self.facing_left = False&#10;                    self.walk_animation()&#10;                    horizontal_speed = self.speed&#10;                else:&#10;                    self.facing_left = False&#10;                    self.walk_animation()&#10;                    horizontal_speed = self.speed&#10;                    self.side = 'L'&#10;&#10;            if not onground:&#10;                self.verticalspeed += self.gravity&#10;&#10;            self.move(horizontal_speed, self.verticalspeed)&#10;            if self.check_collisions(0, 0, self.player_group):&#10;                self.player_interaction()&#10;&#10;&#10;&#10;Animation de chute ajoutée sur le joueur : &#10;def __init__(self, startx, starty, collision_group): &#10;          self.falling_image = [pygame.image.load(&quot;sprites/RedHoodSprite/Saut/RedHood-Saut ({}).png&quot;.format(i)) for i in&#10;                            range(40, 56)]&#10;        self.falling_index = 0&#10;&#10;def update(self): &#10;       # Relatif à la chute &#10;        if not onground and not key[pygame.K_UP] :&#10;            self.falling_animation()&#10;            &#10; &#10;def falling_animation(self):&#10;     self.image = self.falling_image[self.falling_index]&#10;        if self.facing_left:&#10;            self.image = pygame.transform.flip(self.image, True, False)&#10;        self.falling_index += 1&#10;        if self.falling_index == len(self.falling_image):&#10;            self.falling_index = 0&#10;&#10;&#10;&#10;Animation de course du joueur ne s'execute plus en l'air : &#10;        def update(self):                              if onground :&#10;                self.walk_animation()&#10;&#10;Animation de Saut qui ne s'exècute plus au sol : &#10;     def update(self):&#10;        if self.jumping:&#10;            if not onground :&#10;                self.jump_animation()" />
    <option name="LAST_COMMIT_MESSAGE" value="Résolution de problèmes lors des animations du joueur et de l'ennemi&#10;&#10;Animation de mort qui ne s'executait pas pour le squelette :             if self.dead == True :&#10;            self.death_animation()&#10;&#10;        if not self.dead:&#10;&#10;            if max(player_center, ennemy_center) - min(player_center, ennemy_center)&lt; 200:&#10;                if player_center &gt; ennemy_center:&#10;                    self.facing_left = False&#10;                    self.walk_animation()&#10;                    horizontal_speed = self.speed&#10;                    self.side = 'R'&#10;&#10;                else:&#10;                    self.facing_left = True&#10;                    self.walk_animation()&#10;                    horizontal_speed = -self.speed&#10;                    self.side = 'L'&#10;&#10;&#10;            elif self.side == 'L':&#10;                if not self.check_collisions(-1, 0, self.collision_group):&#10;                    self.facing_left = True&#10;                    self.walk_animation()&#10;                    horizontal_speed = -self.speed&#10;                else:&#10;                    self.facing_left = False&#10;                    self.walk_animation()&#10;                    horizontal_speed = self.speed&#10;                    self.side = 'R'&#10;&#10;            else:&#10;                if not self.check_collisions(1, 0, self.collision_group):&#10;                    self.facing_left = False&#10;                    self.walk_animation()&#10;                    horizontal_speed = self.speed&#10;                else:&#10;                    self.facing_left = False&#10;                    self.walk_animation()&#10;                    horizontal_speed = self.speed&#10;                    self.side = 'L'&#10;&#10;            if not onground:&#10;                self.verticalspeed += self.gravity&#10;&#10;            self.move(horizontal_speed, self.verticalspeed)&#10;            if self.check_collisions(0, 0, self.player_group):&#10;                self.player_interaction()&#10;&#10;&#10;&#10;Animation de chute ajoutée sur le joueur : &#10;def __init__(self, startx, starty, collision_group): &#10;          self.falling_image = [pygame.image.load(&quot;sprites/RedHoodSprite/Saut/RedHood-Saut ({}).png&quot;.format(i)) for i in&#10;                            range(40, 56)]&#10;        self.falling_index = 0&#10;&#10;def update(self): &#10;       # Relatif à la chute &#10;        if not onground and not key[pygame.K_UP] :&#10;            self.falling_animation()&#10;            &#10; &#10;def falling_animation(self):&#10;     self.image = self.falling_image[self.falling_index]&#10;        if self.facing_left:&#10;            self.image = pygame.transform.flip(self.image, True, False)&#10;        self.falling_index += 1&#10;        if self.falling_index == len(self.falling_image):&#10;            self.falling_index = 0&#10;&#10;&#10;&#10;Animation de course du joueur ne s'execute plus en l'air : &#10;        def update(self):                              if onground :&#10;                self.walk_animation()&#10;&#10;Animation de Saut qui ne s'exècute plus au sol : &#10;     def update(self):&#10;        if self.jumping:&#10;            if not onground :&#10;                self.jump_animation()" />
  </component>
</project>